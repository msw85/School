package database;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import database.DBConnection;
import model.Supplier;

public class SupplierDB implements SupplierDBIF {
	//TODO
	//	Join in the SQL script to get country instead of country id
	//	Implement createSupplier, updateSupplier, deleteSupplier
	
	private static final String FIND_ALLQ = "select id, name, address, cid, phone_no, email from products";
	private static final String FIND_PROD_BY_IDQ = "select id, name, address, cid, phone_no, email from products where id=?";
	private static final String CREATE_PRODQ = "";
	private static final String UPDATE_PRODQ = "update supplier set name = ?, address = ?, cid = ?, phone_no = ?, mail = ?, email from products where id = ?";
	private static final String DELETE_PRODQ = "";
	
	private PreparedStatement findAll;
	private PreparedStatement findProdById;
	private PreparedStatement createProd;
	private PreparedStatement updateProd;
	private PreparedStatement deleteProd;
	
	public SupplierDB() throws SQLException {
		findAll = DBConnection.getInstance().getConnection().prepareStatement(FIND_ALLQ);
		findProdById = DBConnection.getInstance().getConnection().prepareStatement(FIND_PROD_BY_IDQ);
		createProd = DBConnection.getInstance().getConnection().prepareStatement(CREATE_PRODQ);
		updateProd = DBConnection.getInstance().getConnection().prepareStatement(UPDATE_PRODQ);
		deleteProd = DBConnection.getInstance().getConnection().prepareStatement(DELETE_PRODQ);
	}
	
	
	@Override
	public List<Supplier> findAll() throws SQLException {
		ResultSet rs;
		rs = findAll.executeQuery();
		List<Supplier> allSupp = buildObjects(rs);
		return allSupp;			
	}

	@Override
	public Supplier findById(int id) throws SQLException {
		Supplier supp = null;
		ResultSet rs;
		findProdById.setInt(1, id);
		rs = findProdById.executeQuery();
		supp = buildObject(rs);
		return supp;		
	}

	@Override
	public void createSupplier(Supplier s) {
		// TODO Auto-generated method stub		
	}

	@Override
	public void deleteSupplier(Supplier s) {
		// TODO Auto-generated method stub
	}

	@Override
	public void updateSupplier(Supplier s) throws SQLException {
		// TODO Auto-generated method stub		
			updateProd.setString(1, s.getName());
			updateProd.setString(2, s.getAddress());
			updateProd.setString(3, s.getCity());
			updateProd.setString(4, s.getPhoneno());
			updateProd.setString(5, s.getEmail());
			updateProd.setInt(6, s.getId());
			updateProd.executeUpdate();		
	}
	
	private Supplier buildObject(ResultSet rs) throws SQLException {
		// Make Supplier from RS using constructor!
		Supplier supp = new Supplier(rs.getInt("id"), rs.getString("name"), rs.getString("address"), rs.getString("country"), rs.getString("phone_no"), rs.getString("email"));
		return supp;
	}
	
	private List<Supplier> buildObjects(ResultSet rs) throws SQLException {
		List<Supplier> result = new ArrayList<>();
		while(rs.next()) {
			result.add(buildObject(rs));
		}
		return result;
	}

}
